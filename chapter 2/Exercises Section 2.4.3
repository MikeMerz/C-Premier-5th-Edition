Exercise 2.30: For each of the following declarations indicate whether the
object being declared has top-level or low-level const.

const int v2 = 0; int v1 = v2;
int *p1 = &v1, &r1 = v1;
const int *p2 = &v2, *const p3 = &i, &r2 = v2;

Answers:
v2 has low-level const.
v1 doesn't have top-level or low-level const.
p1 doesn't have top-level or low-level const.
r1 doesn't have top-level or low-level const.
p2 has low-level const and doesn't have top-level const.
p3 has low-level and top-level const.
r2 has low-level const.

Exercise 2.31: Given the declarations in the previous exercise determine
whether the following assignments are legal. Explain how the top-level or
low-level const applies in each case

r1 = v2; // Legal since v2 and r1 has low-level const and thus can be copied.
p1 = p2; // Not legal since p2 has low-level const and p1 doesn't, when copying low-level const has to match.
p2 = p1; // Legal since p2 and p1 doesn't have top-level const and the convertaion from nonconst to const is legal.
p1 = p3; // Not legal since p3 has low-level and top-level const while p1 doesn't have low-level const.
p2 = p3 // Legal since p2 has low-level const and p3 has both, when assigning the top-level const is ignored.
