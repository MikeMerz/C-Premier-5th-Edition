Exercise 6.30: Compile the version of str_subrange as presented on
page 223 to see what your compiler does with the indicated errors.

Answer:
bool str_subrange(const string &str1, const string &str2)
{
// same sizes: return normal equality test
if (str1.size() == str2.size())
return str1 == str2; // ok: == returns bool
// find the size of the smaller string; conditional operator, see ยง 4.7 (p. 151)
auto size = (str1.size() < str2.size())
? str1.size() : str2.size();
// look at each element up to the size of the smaller string
for (decltype(size) i = 0; i != size; ++i) {
if (str1[i] != str2[i])
return; //error :return statement with no value.
